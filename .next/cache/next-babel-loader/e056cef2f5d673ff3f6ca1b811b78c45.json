{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/components/heatMap/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\nimport data from '../../../public/files/trees.geojson'; // external elements required\n// container, styleMap, center, zoom, \n\nvar heatMap = function heatMap(props) {\n  _s();\n\n  console.log(props);\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1];\n\n  useEffect(function () {\n    setPageIsMounted(true);\n    var map = new mapboxgl.Map({\n      // Html container for the map\n      container: container,\n      style: styleMap,\n      center: center,\n      zoom: zoom\n    });\n    map.on('load', function () {\n      // data source added here\n      map.addSource(addSourceName, {\n        type: typeSource,\n        data: dataSource\n      }); // add heatmap layer here\n\n      map.addLayer({\n        id: \"\".concat(addSourceName, \"-heat\"),\n        type: 'heatmap',\n        source: addSourceName,\n        maxzoom: 15,\n        paint: {\n          // increase weight as diameter breast height increases\n          'heatmap-weight': {\n            property: propertyLayer,\n            type: typeLayer,\n            stops: [[1, 0], [62, 1]]\n          },\n          // assign color values be applied to points depending on their density\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(236,222,239,0)', 0.2, 'rgb(208,209,230)', 0.4, 'rgb(166,189,219)', 0.6, 'rgb(103,169,207)', 0.8, 'rgb(28,144,153)'],\n          // increase radius as zoom increases\n          'heatmap-radius': {\n            stops: [[11, 15], [15, 20]]\n          },\n          'heatmap-opacity': {\n            \"default\": 1,\n            stops: [[14, 1], [15, 0]]\n          }\n        }\n      }, 'waterway-label'); //add circle layer here  \n\n      map.addLayer({\n        id: \"\".concat(addSourceName, \"-point\"),\n        type: 'circle',\n        source: addSourceName,\n        minzoom: 14,\n        paint: {\n          // increase the radius of the circle as the zoom level and dbh value increases\n          'circle-radius': {\n            property: propertyLayer,\n            type: typeLayer,\n            stops: [[{\n              zoom: 15,\n              value: 1\n            }, 5], [{\n              zoom: 15,\n              value: 62\n            }, 10], [{\n              zoom: 22,\n              value: 1\n            }, 20], [{\n              zoom: 22,\n              value: 62\n            }, 50]]\n          },\n          'circle-color': {\n            property: propertyLayer,\n            type: typeLayer,\n            stops: [[0, 'rgba(236,222,239,0)'], [10, 'rgb(236,222,239)'], [20, 'rgb(208,209,230)'], [30, 'rgb(166,189,219)'], [40, 'rgb(103,169,207)'], [50, 'rgb(28,144,153)'], [60, 'rgb(1,108,89)']]\n          },\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          'circle-opacity': {\n            stops: [[14, 0], [15, 1]]\n          }\n        }\n      }, 'waterway-label');\n      map.on('click', \"\".concat(addSourceName, \"-point\"), function (e) {\n        new mapboxgl.Popup().setLngLat(e.features[0].geometry.coordinates).setHTML('<br><b>Diameter:</b> ' + e.features[0].properties.dbh).addTo(map);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: {\n        withContainer: withContainer\n      },\n      height: {\n        heigthContainer: heigthContainer\n      }\n    },\n    id: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(heatMap, \"ZxYVMPinGoeBJwpDQu68kIN3X+I=\");\n\nexport default heatMap;","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/components/heatMap/index.js"],"names":["useEffect","useState","mapboxgl","data","heatMap","props","console","log","pageIsMounted","setPageIsMounted","map","Map","container","style","styleMap","center","zoom","on","addSource","addSourceName","type","typeSource","dataSource","addLayer","id","source","maxzoom","paint","property","propertyLayer","typeLayer","stops","minzoom","value","e","Popup","setLngLat","features","geometry","coordinates","setHTML","properties","dbh","addTo","width","withContainer","height","heigthContainer"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\n\n\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\nimport data from '../../../public/files/trees.geojson'\n\n// external elements required\n// container, styleMap, center, zoom, \n\nconst heatMap = (props) => {\n  console.log(props)\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  useEffect(() => { \n    setPageIsMounted(true)\n    const map = new mapboxgl.Map({\n      // Html container for the map\n      container: container,\n      style: styleMap,\n      center: center,\n      zoom: zoom\n    });\n\n    map.on('load', function() {\n          // data source added here\n      map.addSource(addSourceName, {\n        type: typeSource,\n        data: dataSource\n      })\n\n      // add heatmap layer here\n      map.addLayer({\n        id: `${addSourceName}-heat`,\n        type: 'heatmap',\n        source: addSourceName,\n        maxzoom: 15,\n        paint: {\n          // increase weight as diameter breast height increases\n          'heatmap-weight': {\n            property: propertyLayer,\n            type: typeLayer,\n            stops: [\n              [1, 0],\n              [62, 1]\n            ]\n          },\n          // assign color values be applied to points depending on their density\n          'heatmap-color': [\n            'interpolate',\n            ['linear'],\n            ['heatmap-density'],\n            0, 'rgba(236,222,239,0)',\n            0.2, 'rgb(208,209,230)',\n            0.4, 'rgb(166,189,219)',\n            0.6, 'rgb(103,169,207)',\n            0.8, 'rgb(28,144,153)'\n          ],\n          // increase radius as zoom increases\n          'heatmap-radius': {\n            stops: [\n              [11, 15],\n              [15, 20]\n            ]\n          },\n          'heatmap-opacity': {\n            default: 1,\n            stops: [\n              [14, 1],\n              [15, 0]\n            ]\n          },\n        }\n      }, 'waterway-label')\n\n      //add circle layer here  \n      map.addLayer({\n        id: `${addSourceName}-point`,\n        type: 'circle',\n        source: addSourceName,\n        minzoom: 14,\n        paint: {\n          // increase the radius of the circle as the zoom level and dbh value increases\n          'circle-radius': {\n            property: propertyLayer,\n            type: typeLayer,\n            stops: [\n              [{ zoom: 15, value: 1 }, 5],\n              [{ zoom: 15, value: 62 }, 10],\n              [{ zoom: 22, value: 1 }, 20],\n              [{ zoom: 22, value: 62 }, 50],\n            ]\n          },\n          'circle-color': {\n            property: propertyLayer,\n            type: typeLayer,\n            stops: [\n              [0, 'rgba(236,222,239,0)'],\n              [10, 'rgb(236,222,239)'],\n              [20, 'rgb(208,209,230)'],\n              [30, 'rgb(166,189,219)'],\n              [40, 'rgb(103,169,207)'],\n              [50, 'rgb(28,144,153)'],\n              [60, 'rgb(1,108,89)']\n            ]\n          },\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          'circle-opacity': {\n            stops: [\n              [14, 0],\n              [15, 1]\n            ]\n          }\n        }\n      }, 'waterway-label');\n      \n      map.on('click', `${addSourceName}-point`, function(e) {\n        new mapboxgl.Popup()\n          .setLngLat(e.features[0].geometry.coordinates)\n          .setHTML('<br><b>Diameter:</b> ' + e.features[0].properties.dbh)\n          .addTo(map);\n      });\n\n    })\n  \n  })\n\n  return(\n    <div style={{ width: {withContainer}, height: {heigthContainer} }} id={container}>\n\n    </div>\n  )\n\n}\n\nexport default heatMap"]},"metadata":{},"sourceType":"module"}