{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/components/heatmap.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\nimport data from '../public/files/trees.geojson'; // external elements required\n// container, styleMap, center, zoom, \n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nvar heatMap = function heatMap(props) {\n  _s();\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1];\n\n  useEffect(function () {\n    setPageIsMounted(true);\n    var map = new mapboxgl.Map({\n      // Html container for the map\n      container: 'componentMap',\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [-79.999732, 40.4374],\n      zoom: 11\n    });\n    map.on('load', function () {\n      // data source added here\n      map.addSource(addSourceName, {\n        type: 'geojson',\n        data: data\n      }); // add heatmap layer here\n\n      map.addLayer({\n        id: \"trees-heat\",\n        type: 'heatmap',\n        source: 'trees',\n        maxzoom: 15,\n        paint: {\n          // increase weight as diameter breast height increases\n          'heatmap-weight': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [[1, 0], [62, 1]]\n          },\n          // assign color values be applied to points depending on their density\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(236,222,239,0)', 0.2, 'rgb(208,209,230)', 0.4, 'rgb(166,189,219)', 0.6, 'rgb(103,169,207)', 0.8, 'rgb(1,108,89)'],\n          // increase radius as zoom increases\n          'heatmap-radius': {\n            stops: [[11, 15], [15, 20]]\n          },\n          'heatmap-opacity': {\n            \"default\": 1,\n            stops: [[14, 1], [15, 0]]\n          }\n        }\n      }, 'waterway-label'); //add circle layer here  \n\n      map.addLayer({\n        id: \"trees-point\",\n        type: 'circle',\n        source: 'trees',\n        minzoom: 14,\n        paint: {\n          // increase the radius of the circle as the zoom level and dbh value increases\n          'circle-radius': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [[{\n              zoom: 15,\n              value: 1\n            }, 5], [{\n              zoom: 15,\n              value: 62\n            }, 10], [{\n              zoom: 22,\n              value: 1\n            }, 20], [{\n              zoom: 22,\n              value: 62\n            }, 50]]\n          },\n          'circle-color': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [[0, 'rgba(236,222,239,0)'], [10, 'rgb(236,222,239)'], [20, 'rgb(208,209,230)'], [30, 'rgb(166,189,219)'], [40, 'rgb(103,169,207)'], [50, 'rgb(28,144,153)'], [60, 'rgb(1,108,89)']]\n          },\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          'circle-opacity': {\n            stops: [[14, 0], [15, 1]]\n          }\n        }\n      }, 'waterway-label');\n      map.on('click', \"trees-point\", function (e) {\n        new mapboxgl.Popup().setLngLat(e.features[0].geometry.coordinates).setHTML(\"\\n          <div className=\\\"popup__container\\\" style=\\\"background-image: url('https://www.toroto.mx/images/HOME-IPAD-LANDSCAPE-08.png?ec3d0de58b88e0488823c68551598c46');\\\">\\n            ' '\\n          </div>\\n          \") // .setHTML('<br><b>Diameter:</b> ' + e.features[0].properties.dbh)\n        .addTo(map);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"80%\",\n      height: \"70vh\"\n    },\n    id: 'componentMap'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(heatMap, \"ZxYVMPinGoeBJwpDQu68kIN3X+I=\");\n\nexport default heatMap;","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/components/heatmap.js"],"names":["useEffect","useState","mapboxgl","data","accessToken","process","env","MAPBOX_TOKEN","heatMap","props","pageIsMounted","setPageIsMounted","map","Map","container","style","center","zoom","on","addSource","addSourceName","type","addLayer","id","source","maxzoom","paint","property","stops","minzoom","value","e","Popup","setLngLat","features","geometry","coordinates","setHTML","addTo","width","height"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\n\n\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\nimport data from '../public/files/trees.geojson'\n\n// external elements required\n// container, styleMap, center, zoom, \nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nconst heatMap = (props) => {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  useEffect(() => { \n    setPageIsMounted(true)\n    const map = new mapboxgl.Map({\n      // Html container for the map\n      container: 'componentMap',\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [-79.999732, 40.4374],\n      zoom: 11\n    });\n\n    map.on('load', function() {\n          // data source added here\n      map.addSource(addSourceName, {\n        type: 'geojson',\n        data: data\n      })\n\n      // add heatmap layer here\n      map.addLayer({\n        id: `trees-heat`,\n        type: 'heatmap',\n        source: 'trees',\n        maxzoom: 15,\n        paint: {\n          // increase weight as diameter breast height increases\n          'heatmap-weight': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [\n              [1, 0],\n              [62, 1]\n            ]\n          },\n          // assign color values be applied to points depending on their density\n          'heatmap-color': [\n            'interpolate',\n            ['linear'],\n            ['heatmap-density'],\n            0, 'rgba(236,222,239,0)',\n            0.2, 'rgb(208,209,230)',\n            0.4, 'rgb(166,189,219)',\n            0.6, 'rgb(103,169,207)',\n            0.8, 'rgb(1,108,89)'\n          ],\n          // increase radius as zoom increases\n          'heatmap-radius': {\n            stops: [\n              [11, 15],\n              [15, 20]\n            ]\n          },\n          'heatmap-opacity': {\n            default: 1,\n            stops: [\n              [14, 1],\n              [15, 0]\n            ]\n          },\n        }\n      }, 'waterway-label')\n\n      //add circle layer here  \n      map.addLayer({\n        id: `trees-point`,\n        type: 'circle',\n        source: 'trees',\n        minzoom: 14,\n        paint: {\n          // increase the radius of the circle as the zoom level and dbh value increases\n          'circle-radius': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [\n              [{ zoom: 15, value: 1 }, 5],\n              [{ zoom: 15, value: 62 }, 10],\n              [{ zoom: 22, value: 1 }, 20],\n              [{ zoom: 22, value: 62 }, 50],\n            ]\n          },\n          'circle-color': {\n            property: 'dbh',\n            type: 'exponential',\n            stops: [\n              [0, 'rgba(236,222,239,0)'],\n              [10, 'rgb(236,222,239)'],\n              [20, 'rgb(208,209,230)'],\n              [30, 'rgb(166,189,219)'],\n              [40, 'rgb(103,169,207)'],\n              [50, 'rgb(28,144,153)'],\n              [60, 'rgb(1,108,89)']\n            ]\n          },\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          'circle-opacity': {\n            stops: [\n              [14, 0],\n              [15, 1]\n            ]\n          }\n        }\n      }, 'waterway-label');\n      \n      map.on('click', `trees-point`, function(e) {\n        new mapboxgl.Popup()\n          .setLngLat(e.features[0].geometry.coordinates)\n          .setHTML(`\n          <div className=\"popup__container\" style=\"background-image: url('https://www.toroto.mx/images/HOME-IPAD-LANDSCAPE-08.png?ec3d0de58b88e0488823c68551598c46');\">\n            ' '\n          </div>\n          `)\n          // .setHTML('<br><b>Diameter:</b> ' + e.features[0].properties.dbh)\n          .addTo(map);\n      });\n\n    })\n  \n  })\n\n  return(\n    <div style={{ width: `80%`, height: `70vh` }} id={'componentMap'}>\n\n    </div>\n  )\n\n}\n\nexport default heatMap"]},"metadata":{},"sourceType":"module"}