{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/components/dynamicLayer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\n\nvar dynamicLayer = function dynamicLayer() {\n  _s();\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1];\n\n  useEffect(function () {\n    setPageIsMounted(true);\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      zoom: 15,\n      center: [-71.97722138410576, -13.517379300798098]\n    }); // Wait until the map has finished loading.\n\n    map.on('load', function () {\n      // Add a custom vector tileset source. This tileset contains\n      // point features representing museums. Each feature contains\n      // three properties. For example:\n      // {\n      //     alt_name: \"Museo Arqueologico\",\n      //     name: \"Museo Inka\",\n      //     tourism: \"museum\"\n      // }\n      map.addSource('museums', {\n        type: 'vector',\n        url: 'mapbox://mapbox.2opop9hr'\n      });\n      map.addLayer({\n        'id': 'museums',\n        'type': 'circle',\n        'source': 'museums',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible'\n        },\n        'paint': {\n          'circle-radius': 8,\n          'circle-color': 'rgba(55,148,179,1)'\n        },\n        'source-layer': 'museum-cusco'\n      }); // Add the Mapbox Terrain v2 vector tileset. Read more about\n      // the structure of data in this tileset in the documentation:\n      // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n\n      map.addSource('contours', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-terrain-v2'\n      });\n      map.addLayer({\n        'id': 'contours',\n        'type': 'line',\n        'source': 'contours',\n        'source-layer': 'contour',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible',\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#877b59',\n          'line-width': 1\n        }\n      });\n    }); // After the last frame rendered before the map enters an \"idle\" state.\n\n    map.on('idle', function () {\n      // If these two layers have been added to the style,\n      // add the toggle buttons.\n      if (map.getLayer('contours') && map.getLayer('museums')) {\n        // Enumerate ids of the layers.\n        var toggleableLayerIds = ['contours', 'museums']; // Set up the corresponding toggle button for each layer.\n\n        for (var i = 0; i < toggleableLayerIds.length; i++) {\n          var id = toggleableLayerIds[i];\n\n          if (!document.getElementById(id)) {\n            // Create a link.\n            var link = document.createElement('a');\n            link.id = id;\n            link.href = '#';\n            link.textContent = id;\n            link.className = 'active'; // Show or hide layer when the toggle is clicked.\n\n            link.onclick = function (e) {\n              var clickedLayer = this.textContent;\n              e.preventDefault();\n              e.stopPropagation();\n              var visibility = map.getLayoutProperty(clickedLayer, 'visibility'); // Toggle layer visibility by changing the layout object's visibility property.\n\n              if (visibility === 'visible') {\n                map.setLayoutProperty(clickedLayer, 'visibility', 'none');\n                this.className = '';\n              } else {\n                this.className = 'active';\n                map.setLayoutProperty(clickedLayer, 'visibility', 'visible');\n              }\n            };\n\n            var layers = document.getElementById('menu');\n            layers.appendChild(link);\n          }\n        }\n      }\n    }, []);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      id: \"menu\",\n      className: \"jsx-2957814091\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"jsx-2957814091\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2957814091\",\n      children: \"#menu.jsx-2957814091{background:#fff;position:absolute;z-index:1;top:10px;right:10px;border-radius:3px;width:120px;border:1px solid rgba(0,0,0,0.4);font-family:'Open Sans',sans-serif;}#menu.jsx-2957814091 a.jsx-2957814091{font-size:13px;color:#404040;display:block;margin:0;padding:0;padding:10px;-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid rgba(0,0,0,0.25);text-align:center;}#menu.jsx-2957814091 a.jsx-2957814091:last-child{border:none;}#menu.jsx-2957814091 a.jsx-2957814091:hover{background-color:#f8f8f8;color:#404040;}#menu.jsx-2957814091 a.active.jsx-2957814091{background-color:#3887be;color:#ffffff;}#menu.jsx-2957814091 a.active.jsx-2957814091:hover{background:#3074a4;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/intermezzto/Documentos/codeProyects/mapbox-project/components/dynamicLayer.js */\"\n    }, void 0, false, void 0, _this)]\n  }, void 0, true);\n};\n\n_s(dynamicLayer, \"ZxYVMPinGoeBJwpDQu68kIN3X+I=\");\n\nexport default dynamicLayer; // import { useEffect, useState } from 'react'\n// import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n// const dynamicLayer = () => {\n//   const [pageIsMounted, setPageIsMounted] = useState(false)\n//   useEffect(() => {\n//     setPageIsMounted(true)\n//     const map = new mapboxgl.Map({\n//       container: 'dynamicLayer-map',\n//       style: 'mapbox://styles/mapbox/streets-v11',\n//       zoom: 15,\n//       center: [-71.97722138410576, -13.517379300798098]\n//       });\n//       // Wait until the map has finished loading.\n//       // Add a custom vector tileset source. This tileset contains\n//     map.on('load', function () {\n//       // point features representing museums. Each feature contains\n//       // three properties. For example:\n//       // {\n//       //     alt_name: \"Museo Arqueologico\",\n//       //     name: \"Museo Inka\",\n//       //     tourism: \"museum\"\n//       // }\n//       map.addSource('museums', {\n//         type: 'vector',\n//         url: 'mapbox://mapbox.2opop9hr'\n//       });\n//       map.addLayer({\n//         'id': 'museums',\n//         'type': 'circle',\n//         'source': 'museums',\n//         'layout': {\n//           // Make the layer visible by default.\n//           'visibility': 'visible'\n//         },\n//         'paint': {\n//           'circle-radius': 8,\n//           'circle-color': 'rgba(55,148,179,1)'\n//         },\n//         'source-layer': 'museum-cusco'\n//       });\n//       // Add the Mapbox Terrain v2 vector tileset. Read more about\n//       // the structure of data in this tileset in the documentation:\n//       // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n//       map.addSource('contours', {\n//         type: 'vector',\n//         url: 'mapbox://mapbox.mapbox-terrain-v2'\n//       });\n//       map.addLayer({\n//         'id': 'contours',\n//         'type': 'line',\n//         'source': 'contours',\n//         'source-layer': 'contour',\n//         'layout': {\n//           // Make the layer visible by default.\n//           'visibility': 'visible',\n//           'line-join': 'round',\n//           'line-cap': 'round'\n//         },\n//         'paint': {\n//           'line-color': '#877b59',\n//           'line-width': 1\n//         }\n//       });\n//     });\n//       // After the last frame rendered before the map enters an \"idle\" state.\n//     map.on('idle', function () {\n//       // If these two layers have been added to the style,\n//       // add the toggle buttons.\n//       if (map.getLayer('contours') && map.getLayer('museums')) {\n//         // Enumerate ids of the layers.\n//         var toggleableLayerIds = ['contours', 'museums'];\n//         // Set up the corresponding toggle button for each layer.\n//         for (var i = 0; i < toggleableLayerIds.length; i++) {\n//           var id = toggleableLayerIds[i];\n//           if (!document.getElementById(id)) {\n//             // Create a link.\n//             var link = document.createElement('a');\n//             link.id = id;\n//             link.href = '#';\n//             link.textContent = id;\n//             link.className = 'active';\n//             // Show or hide layer when the toggle is clicked.\n//             link.onclick = function (e) {\n//               var clickedLayer = this.textContent;\n//               e.preventDefault();\n//               e.stopPropagation();\n//               var visibility = map.getLayoutProperty(\n//                 clickedLayer,\n//                 'visibility'\n//               );\n//               // Toggle layer visibility by changing the layout object's visibility property.\n//               if (visibility === 'visible') {\n//                 map.setLayoutProperty(\n//                 clickedLayer,\n//                 'visibility',\n//                 'none'\n//                 );\n//                 this.className = '';\n//               } else {\n//                 this.className = 'active';\n//                 map.setLayoutProperty(\n//                 clickedLayer,\n//                 'visibility',\n//                 'visible'\n//                 );\n//               }\n//             };\n//             var layers = document.getElementById('dynamicLayer-menu');\n//             layers.appendChild(link);\n//           }\n//         }\n//       }\n//       });\n//   })\n//   return(\n//     <>\n//       <nav id=\"dynamicLayer-menu\"></nav>\n//       <div style={{ width: `80%`, height: `70vh` }} id=\"dynamicLayer-map\"></div>\n//       <style jsx>{`\n//         #dynamicLayer-menu {\n//           background: #fff;\n//           position: absolute;\n//           z-index: 1;\n//           top: 10px;\n//           right: 10px;\n//           border-radius: 3px;\n//           width: 120px;\n//           border: 1px solid rgba(0, 0, 0, 0.4);\n//           font-family: 'Open Sans', sans-serif;\n//           }\n//           #dynamicLayer-menu a {\n//           font-size: 13px;\n//           color: #404040;\n//           display: block;\n//           margin: 0;\n//           padding: 0;\n//           padding: 10px;\n//           text-decoration: none;\n//           border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n//           text-align: center;\n//           }\n//           #dynamicLayer-menu a:last-child {\n//           border: none;\n//           }\n//           #dynamicLayer-menu a:hover {\n//           background-color: #f8f8f8;\n//           color: #404040;\n//           }\n//           #dynamicLayer-menu a.active {\n//           background-color: #3887be;\n//           color: #ffffff;\n//           }\n//           #dynamicLayer-menu a.active:hover {\n//           background: #3074a4;\n//           }\n//       `}</style>\n//     </>\n//   )\n// }\n// export default dynamicLayer","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/components/dynamicLayer.js"],"names":["useEffect","useState","mapboxgl","dynamicLayer","pageIsMounted","setPageIsMounted","map","Map","container","style","zoom","center","on","addSource","type","url","addLayer","getLayer","toggleableLayerIds","i","length","id","document","getElementById","link","createElement","href","textContent","className","onclick","e","clickedLayer","preventDefault","stopPropagation","visibility","getLayoutProperty","setLayoutProperty","layers","appendChild"],"mappings":"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":["import { useEffect, useState } from 'react'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\nconst dynamicLayer = () => {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n  useEffect(() => {\n    setPageIsMounted(true)\n\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      zoom: 15,\n      center: [-71.97722138410576, -13.517379300798098]\n    });\n    // Wait until the map has finished loading.\n    map.on('load', function () {\n      // Add a custom vector tileset source. This tileset contains\n      // point features representing museums. Each feature contains\n      // three properties. For example:\n      // {\n      //     alt_name: \"Museo Arqueologico\",\n      //     name: \"Museo Inka\",\n      //     tourism: \"museum\"\n      // }\n      map.addSource('museums', {\n          type: 'vector',\n          url: 'mapbox://mapbox.2opop9hr'\n      });\n      map.addLayer({\n          'id': 'museums',\n          'type': 'circle',\n          'source': 'museums',\n          'layout': {\n              // Make the layer visible by default.\n              'visibility': 'visible'\n          },\n          'paint': {\n              'circle-radius': 8,\n              'circle-color': 'rgba(55,148,179,1)'\n          },\n          'source-layer': 'museum-cusco'\n      });\n\n      // Add the Mapbox Terrain v2 vector tileset. Read more about\n      // the structure of data in this tileset in the documentation:\n      // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n      map.addSource('contours', {\n          type: 'vector',\n          url: 'mapbox://mapbox.mapbox-terrain-v2'\n      });\n      map.addLayer({\n          'id': 'contours',\n          'type': 'line',\n          'source': 'contours',\n          'source-layer': 'contour',\n          'layout': {\n              // Make the layer visible by default.\n              'visibility': 'visible',\n              'line-join': 'round',\n              'line-cap': 'round'\n          },\n          'paint': {\n              'line-color': '#877b59',\n              'line-width': 1\n          }\n      });\n  });\n\n  // After the last frame rendered before the map enters an \"idle\" state.\n  map.on('idle', function () {\n      // If these two layers have been added to the style,\n      // add the toggle buttons.\n      if (map.getLayer('contours') && map.getLayer('museums')) {\n          // Enumerate ids of the layers.\n          var toggleableLayerIds = ['contours', 'museums'];\n          // Set up the corresponding toggle button for each layer.\n          for (var i = 0; i < toggleableLayerIds.length; i++) {\n              var id = toggleableLayerIds[i];\n              if (!document.getElementById(id)) {\n                  // Create a link.\n                  var link = document.createElement('a');\n                  link.id = id;\n                  link.href = '#';\n                  link.textContent = id;\n                  link.className = 'active';\n                  // Show or hide layer when the toggle is clicked.\n                  link.onclick = function (e) {\n                      var clickedLayer = this.textContent;\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      var visibility = map.getLayoutProperty(\n                          clickedLayer,\n                          'visibility'\n                      );\n\n                      // Toggle layer visibility by changing the layout object's visibility property.\n                      if (visibility === 'visible') {\n                          map.setLayoutProperty(\n                              clickedLayer,\n                              'visibility',\n                              'none'\n                          );\n                          this.className = '';\n                      } else {\n                          this.className = 'active';\n                          map.setLayoutProperty(\n                              clickedLayer,\n                              'visibility',\n                              'visible'\n                          );\n                      }\n                  };\n\n                  var layers = document.getElementById('menu');\n                  layers.appendChild(link);\n              }\n          }\n      }\n  }, []);\n\n\n  })\n\n  return(\n    <>\n      <nav id=\"menu\"></nav>\n      <div id=\"map\"></div>\n      <style jsx>{`\n            #menu {\n              background: #fff;\n              position: absolute;\n              z-index: 1;\n              top: 10px;\n              right: 10px;\n              border-radius: 3px;\n              width: 120px;\n              border: 1px solid rgba(0, 0, 0, 0.4);\n              font-family: 'Open Sans', sans-serif;\n          }\n      \n          #menu a {\n              font-size: 13px;\n              color: #404040;\n              display: block;\n              margin: 0;\n              padding: 0;\n              padding: 10px;\n              text-decoration: none;\n              border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n              text-align: center;\n          }\n      \n          #menu a:last-child {\n              border: none;\n          }\n      \n          #menu a:hover {\n              background-color: #f8f8f8;\n              color: #404040;\n          }\n      \n          #menu a.active {\n              background-color: #3887be;\n              color: #ffffff;\n          }\n      \n          #menu a.active:hover {\n              background: #3074a4;\n          }\n      \n      `}</style>\n    </>\n  )\n}\n\nexport default dynamicLayer\n\n\n// import { useEffect, useState } from 'react'\n// import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\n// const dynamicLayer = () => {\n//   const [pageIsMounted, setPageIsMounted] = useState(false)\n//   useEffect(() => {\n//     setPageIsMounted(true)\n\n//     const map = new mapboxgl.Map({\n//       container: 'dynamicLayer-map',\n//       style: 'mapbox://styles/mapbox/streets-v11',\n//       zoom: 15,\n//       center: [-71.97722138410576, -13.517379300798098]\n//       });\n\n//       // Wait until the map has finished loading.\n//       // Add a custom vector tileset source. This tileset contains\n//     map.on('load', function () {\n//       // point features representing museums. Each feature contains\n//       // three properties. For example:\n//       // {\n//       //     alt_name: \"Museo Arqueologico\",\n//       //     name: \"Museo Inka\",\n//       //     tourism: \"museum\"\n//       // }\n//       map.addSource('museums', {\n//         type: 'vector',\n//         url: 'mapbox://mapbox.2opop9hr'\n//       });\n//       map.addLayer({\n//         'id': 'museums',\n//         'type': 'circle',\n//         'source': 'museums',\n//         'layout': {\n//           // Make the layer visible by default.\n//           'visibility': 'visible'\n//         },\n//         'paint': {\n//           'circle-radius': 8,\n//           'circle-color': 'rgba(55,148,179,1)'\n//         },\n//         'source-layer': 'museum-cusco'\n//       });\n\n//       // Add the Mapbox Terrain v2 vector tileset. Read more about\n//       // the structure of data in this tileset in the documentation:\n//       // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n//       map.addSource('contours', {\n//         type: 'vector',\n//         url: 'mapbox://mapbox.mapbox-terrain-v2'\n//       });\n//       map.addLayer({\n//         'id': 'contours',\n//         'type': 'line',\n//         'source': 'contours',\n//         'source-layer': 'contour',\n//         'layout': {\n//           // Make the layer visible by default.\n//           'visibility': 'visible',\n//           'line-join': 'round',\n//           'line-cap': 'round'\n//         },\n//         'paint': {\n//           'line-color': '#877b59',\n//           'line-width': 1\n//         }\n//       });\n//     });\n\n//       // After the last frame rendered before the map enters an \"idle\" state.\n//     map.on('idle', function () {\n//       // If these two layers have been added to the style,\n//       // add the toggle buttons.\n//       if (map.getLayer('contours') && map.getLayer('museums')) {\n//         // Enumerate ids of the layers.\n//         var toggleableLayerIds = ['contours', 'museums'];\n//         // Set up the corresponding toggle button for each layer.\n//         for (var i = 0; i < toggleableLayerIds.length; i++) {\n//           var id = toggleableLayerIds[i];\n//           if (!document.getElementById(id)) {\n//             // Create a link.\n//             var link = document.createElement('a');\n//             link.id = id;\n//             link.href = '#';\n//             link.textContent = id;\n//             link.className = 'active';\n//             // Show or hide layer when the toggle is clicked.\n//             link.onclick = function (e) {\n//               var clickedLayer = this.textContent;\n//               e.preventDefault();\n//               e.stopPropagation();\n                \n//               var visibility = map.getLayoutProperty(\n//                 clickedLayer,\n//                 'visibility'\n//               );\n                \n//               // Toggle layer visibility by changing the layout object's visibility property.\n//               if (visibility === 'visible') {\n//                 map.setLayoutProperty(\n//                 clickedLayer,\n//                 'visibility',\n//                 'none'\n//                 );\n//                 this.className = '';\n//               } else {\n//                 this.className = 'active';\n//                 map.setLayoutProperty(\n//                 clickedLayer,\n//                 'visibility',\n//                 'visible'\n//                 );\n//               }\n//             };\n//             var layers = document.getElementById('dynamicLayer-menu');\n//             layers.appendChild(link);\n//           }\n//         }\n//       }\n//       });\n\n    \n//   })\n\n//   return(\n//     <>\n//       <nav id=\"dynamicLayer-menu\"></nav>\n//       <div style={{ width: `80%`, height: `70vh` }} id=\"dynamicLayer-map\"></div>\n//       <style jsx>{`\n//         #dynamicLayer-menu {\n//           background: #fff;\n//           position: absolute;\n//           z-index: 1;\n//           top: 10px;\n//           right: 10px;\n//           border-radius: 3px;\n//           width: 120px;\n//           border: 1px solid rgba(0, 0, 0, 0.4);\n//           font-family: 'Open Sans', sans-serif;\n//           }\n           \n//           #dynamicLayer-menu a {\n//           font-size: 13px;\n//           color: #404040;\n//           display: block;\n//           margin: 0;\n//           padding: 0;\n//           padding: 10px;\n//           text-decoration: none;\n//           border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n//           text-align: center;\n//           }\n           \n//           #dynamicLayer-menu a:last-child {\n//           border: none;\n//           }\n           \n//           #dynamicLayer-menu a:hover {\n//           background-color: #f8f8f8;\n//           color: #404040;\n//           }\n           \n//           #dynamicLayer-menu a.active {\n//           background-color: #3887be;\n//           color: #ffffff;\n//           }\n           \n//           #dynamicLayer-menu a.active:hover {\n//           background: #3074a4;\n//           }\n//       `}</style>\n//     </>\n//   )\n// }\n\n// export default dynamicLayer\n"]},"metadata":{},"sourceType":"module"}