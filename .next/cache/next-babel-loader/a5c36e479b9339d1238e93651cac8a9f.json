{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/components/dynamicLayer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\n\nvar dynamicLayer = function dynamicLayer() {\n  _s();\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var map;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setPageIsMounted(true);\n            _context.next = 3;\n            return new mapboxgl.Map({\n              container: 'dynamicLayer-map',\n              style: 'mapbox://styles/mapbox/streets-v11',\n              zoom: 15,\n              center: [-71.97722138410576, -13.517379300798098]\n            });\n\n          case 3:\n            map = _context.sent;\n            _context.next = 6;\n            return map.on('load', function () {\n              // point features representing museums. Each feature contains\n              // three properties. For example:\n              // {\n              //     alt_name: \"Museo Arqueologico\",\n              //     name: \"Museo Inka\",\n              //     tourism: \"museum\"\n              // }\n              map.addSource('museums', {\n                type: 'vector',\n                url: 'mapbox://mapbox.2opop9hr'\n              });\n              map.addLayer({\n                'id': 'museums',\n                'type': 'circle',\n                'source': 'museums',\n                'layout': {\n                  // Make the layer visible by default.\n                  'visibility': 'visible'\n                },\n                'paint': {\n                  'circle-radius': 8,\n                  'circle-color': 'rgba(55,148,179,1)'\n                },\n                'source-layer': 'museum-cusco'\n              }); // Add the Mapbox Terrain v2 vector tileset. Read more about\n              // the structure of data in this tileset in the documentation:\n              // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n\n              map.addSource('contours', {\n                type: 'vector',\n                url: 'mapbox://mapbox.mapbox-terrain-v2'\n              });\n              map.addLayer({\n                'id': 'contours',\n                'type': 'line',\n                'source': 'contours',\n                'source-layer': 'contour',\n                'layout': {\n                  // Make the layer visible by default.\n                  'visibility': 'visible',\n                  'line-join': 'round',\n                  'line-cap': 'round'\n                },\n                'paint': {\n                  'line-color': '#877b59',\n                  'line-width': 1\n                }\n              });\n            });\n\n          case 6:\n            _context.next = 8;\n            return map.on('idle', function () {\n              // If these two layers have been added to the style,\n              // add the toggle buttons.\n              if (map.getLayer('contours') && map.getLayer('museums')) {\n                // Enumerate ids of the layers.\n                var toggleableLayerIds = ['contours', 'museums']; // Set up the corresponding toggle button for each layer.\n\n                for (var i = 0; i < toggleableLayerIds.length; i++) {\n                  var id = toggleableLayerIds[i];\n\n                  if (!document.getElementById(id)) {\n                    // Create a link.\n                    var link = document.createElement('a');\n                    link.id = id;\n                    link.href = '#';\n                    link.textContent = id;\n                    link.className = 'active'; // Show or hide layer when the toggle is clicked.\n\n                    link.onclick = function (e) {\n                      var clickedLayer = this.textContent;\n                      e.preventDefault();\n                      e.stopPropagation();\n                      var visibility = map.getLayoutProperty(clickedLayer, 'visibility'); // Toggle layer visibility by changing the layout object's visibility property.\n\n                      if (visibility === 'visible') {\n                        map.setLayoutProperty(clickedLayer, 'visibility', 'none');\n                        this.className = '';\n                      } else {\n                        this.className = 'active';\n                        map.setLayoutProperty(clickedLayer, 'visibility', 'visible');\n                      }\n                    };\n\n                    var layers = document.getElementById('dynamicLayer-menu');\n                    layers.appendChild(link);\n                  }\n                }\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      id: \"dynamicLayer-menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100vh\"\n      },\n      id: \"dynamicLayer-map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(dynamicLayer, \"ZxYVMPinGoeBJwpDQu68kIN3X+I=\");\n\nexport default dynamicLayer;","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/components/dynamicLayer.js"],"names":["useEffect","useState","mapboxgl","dynamicLayer","pageIsMounted","setPageIsMounted","Map","container","style","zoom","center","map","on","addSource","type","url","addLayer","getLayer","toggleableLayerIds","i","length","id","document","getElementById","link","createElement","href","textContent","className","onclick","e","clickedLayer","preventDefault","stopPropagation","visibility","getLayoutProperty","setLayoutProperty","layers","appendChild","width","height"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\nconst dynamicLayer = () => {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  useEffect(async () => {\n    setPageIsMounted(true)\n\n\n    const map = await new mapboxgl.Map({\n      container: 'dynamicLayer-map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      zoom: 15,\n      center: [-71.97722138410576, -13.517379300798098]\n    });\n\n      // Wait until the map has finished loading.\n      // Add a custom vector tileset source. This tileset contains\n    await map.on('load', function () {\n      // point features representing museums. Each feature contains\n      // three properties. For example:\n      // {\n      //     alt_name: \"Museo Arqueologico\",\n      //     name: \"Museo Inka\",\n      //     tourism: \"museum\"\n      // }\n      map.addSource('museums', {\n        type: 'vector',\n        url: 'mapbox://mapbox.2opop9hr'\n      });\n      map.addLayer({\n        'id': 'museums',\n        'type': 'circle',\n        'source': 'museums',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible'\n        },\n        'paint': {\n          'circle-radius': 8,\n          'circle-color': 'rgba(55,148,179,1)'\n        },\n        'source-layer': 'museum-cusco'\n      });\n\n      // Add the Mapbox Terrain v2 vector tileset. Read more about\n      // the structure of data in this tileset in the documentation:\n      // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n      map.addSource('contours', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-terrain-v2'\n      });\n      map.addLayer({\n        'id': 'contours',\n        'type': 'line',\n        'source': 'contours',\n        'source-layer': 'contour',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible',\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#877b59',\n          'line-width': 1\n        }\n      });\n    });\n\n      // After the last frame rendered before the map enters an \"idle\" state.\n    await map.on('idle', function () {\n      // If these two layers have been added to the style,\n      // add the toggle buttons.\n      if (map.getLayer('contours') && map.getLayer('museums')) {\n        // Enumerate ids of the layers.\n        var toggleableLayerIds = ['contours', 'museums'];\n        // Set up the corresponding toggle button for each layer.\n        for (var i = 0; i < toggleableLayerIds.length; i++) {\n          var id = toggleableLayerIds[i];\n          if (!document.getElementById(id)) {\n            // Create a link.\n            var link = document.createElement('a');\n            link.id = id;\n            link.href = '#';\n            link.textContent = id;\n            link.className = 'active';\n            // Show or hide layer when the toggle is clicked.\n            link.onclick = function (e) {\n              var clickedLayer = this.textContent;\n              e.preventDefault();\n              e.stopPropagation();\n                \n              var visibility = map.getLayoutProperty(\n                clickedLayer,\n                'visibility'\n              );\n                \n              // Toggle layer visibility by changing the layout object's visibility property.\n              if (visibility === 'visible') {\n                map.setLayoutProperty(\n                clickedLayer,\n                'visibility',\n                'none'\n                );\n                this.className = '';\n              } else {\n                this.className = 'active';\n                map.setLayoutProperty(\n                clickedLayer,\n                'visibility',\n                'visible'\n                );\n              }\n            };\n            var layers = document.getElementById('dynamicLayer-menu');\n            layers.appendChild(link);\n          }\n        }\n      }\n      });\n\n    \n  })\n\n  return(\n    <>\n      <nav id=\"dynamicLayer-menu\"></nav>\n      <div style={{ width: `100%`, height: `100vh` }} id=\"dynamicLayer-map\"></div>\n\n    </>\n  )\n}\n\nexport default dynamicLayer\n"]},"metadata":{},"sourceType":"module"}