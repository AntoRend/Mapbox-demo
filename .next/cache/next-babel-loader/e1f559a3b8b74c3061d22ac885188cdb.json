{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/Home.module.css';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'; // import data from '../public/files/last_test3.geojson'\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\nexport default function Home() {\n  _s();\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1];\n\n  useEffect(function () {\n    setPageIsMounted(true);\n    var map = new mapboxgl.Map({\n      container: 'myMap',\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [-103.59179687498357, 40.66995747013945],\n      zoom: 3\n    }); // Show an alert if the browser does not support Mapbox GL\n\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    } // Add zoom and rotation controls to the map.\n\n\n    map.addControl(new mapboxgl.NavigationControl()); // Add geolocation button\n\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    map.on('load', function () {\n      // Add a new source from our GeoJSON data and\n      // set the 'cluster' option to true. GL-JS will\n      // add the point_count property to your source data.\n      map.addSource('earthquakes', {\n        type: 'geojson',\n        // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n        // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\n        data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        cluster: true,\n        clusterMaxZoom: 14,\n        // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n\n      });\n      map.addLayer({\n        id: 'clusters',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        paint: {\n          // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n          // with three steps to implement three types of circles:\n          //   * Blue, 20px circles when point count is less than 100\n          //   * Yellow, 30px circles when point count is between 100 and 750\n          //   * Pink, 40px circles when point count is greater than or equal to 750\n          'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\n          'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40]\n        }\n      });\n      map.addLayer({\n        id: 'cluster-count',\n        type: 'symbol',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        }\n      });\n      map.addLayer({\n        id: 'unclustered-point',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['!', ['has', 'point_count']],\n        paint: {\n          'circle-color': '#11b4da',\n          'circle-radius': 4,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      }); // inspect a cluster on click\n\n      map.on('click', 'clusters', function (e) {\n        var features = map.queryRenderedFeatures(e.point, {\n          layers: ['clusters']\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource('earthquakes').getClusterExpansionZoom(clusterId, function (err, zoom) {\n          if (err) return;\n          map.easeTo({\n            center: features[0].geometry.coordinates,\n            zoom: zoom\n          });\n        });\n      }); // When a click event occurs on a feature in\n      // the unclustered-point layer, open a popup at\n      // the location of the feature, with\n      // description HTML from its properties.\n\n      map.on('click', 'unclustered-point', function (e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var mag = e.features[0].properties.mag;\n        var tsunami;\n\n        if (e.features[0].properties.tsunami === 1) {\n          tsunami = 'yes';\n        } else {\n          tsunami = 'no';\n        } // Ensure that if the map is zoomed out such that\n        // multiple copies of the feature are visible, the\n        // popup appears over the copy being pointed to.\n\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML('magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami).addTo(map);\n      });\n      map.on('mouseenter', 'clusters', function () {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n      map.on('mouseleave', 'clusters', function () {\n        map.getCanvas().style.cursor = '';\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '30rem'\n      },\n      id: \"myMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"ZxYVMPinGoeBJwpDQu68kIN3X+I=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js"],"names":["Head","useEffect","useState","styles","mapboxgl","accessToken","process","env","MAPBOX_TOKEN","Home","pageIsMounted","setPageIsMounted","map","Map","container","style","center","zoom","supported","alert","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","on","addSource","type","data","cluster","clusterMaxZoom","clusterRadius","addLayer","id","source","filter","paint","layout","e","features","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","geometry","coordinates","slice","mag","tsunami","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","width","height","footer"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { useEffect, useState } from 'react'\nimport styles from '../styles/Home.module.css'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\n// import data from '../public/files/last_test3.geojson'\n\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nexport default function Home() {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  useEffect(() => {\n    setPageIsMounted(true)\n      const map = new mapboxgl.Map({\n        container: 'myMap',\n        style: 'mapbox://styles/mapbox/dark-v10',\n        center: [-103.59179687498357, 40.66995747013945],\n        zoom: 3\n      });\n\n      // Show an alert if the browser does not support Mapbox GL\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    }\n    \n      // Add zoom and rotation controls to the map.\n      map.addControl(new mapboxgl.NavigationControl());\n\n      // Add geolocation button\n      map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true,\n          },\n          trackUserLocation: true,\n        })\n      );\n\n      map.on('load', function () {\n        // Add a new source from our GeoJSON data and\n        // set the 'cluster' option to true. GL-JS will\n        // add the point_count property to your source data.\n        map.addSource('earthquakes', {\n        type: 'geojson',\n        // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n        // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\n        data:\n        'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        cluster: true,\n        clusterMaxZoom: 14, // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n        });\n         \n        map.addLayer({\n        id: 'clusters',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        paint: {\n        // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n        // with three steps to implement three types of circles:\n        //   * Blue, 20px circles when point count is less than 100\n        //   * Yellow, 30px circles when point count is between 100 and 750\n        //   * Pink, 40px circles when point count is greater than or equal to 750\n        'circle-color': [\n        'step',\n        ['get', 'point_count'],\n        '#51bbd6',\n        100,\n        '#f1f075',\n        750,\n        '#f28cb1'\n        ],\n        'circle-radius': [\n        'step',\n        ['get', 'point_count'],\n        20,\n        100,\n        30,\n        750,\n        40\n        ]\n        }\n        });\n         \n        map.addLayer({\n        id: 'cluster-count',\n        type: 'symbol',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n        'text-size': 12\n        }\n        });\n         \n        map.addLayer({\n        id: 'unclustered-point',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['!', ['has', 'point_count']],\n        paint: {\n        'circle-color': '#11b4da',\n        'circle-radius': 4,\n        'circle-stroke-width': 1,\n        'circle-stroke-color': '#fff'\n        }\n        });\n         \n        // inspect a cluster on click\n        map.on('click', 'clusters', function (e) {\n        var features = map.queryRenderedFeatures(e.point, {\n        layers: ['clusters']\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource('earthquakes').getClusterExpansionZoom(\n        clusterId,\n        function (err, zoom) {\n        if (err) return;\n         \n        map.easeTo({\n        center: features[0].geometry.coordinates,\n        zoom: zoom\n        });\n        }\n        );\n        });\n         \n        // When a click event occurs on a feature in\n        // the unclustered-point layer, open a popup at\n        // the location of the feature, with\n        // description HTML from its properties.\n        map.on('click', 'unclustered-point', function (e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var mag = e.features[0].properties.mag;\n        var tsunami;\n         \n        if (e.features[0].properties.tsunami === 1) {\n        tsunami = 'yes';\n        } else {\n        tsunami = 'no';\n        }\n         \n        // Ensure that if the map is zoomed out such that\n        // multiple copies of the feature are visible, the\n        // popup appears over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n         \n        new mapboxgl.Popup()\n        .setLngLat(coordinates)\n        .setHTML(\n        'magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami\n        )\n        .addTo(map);\n        });\n         \n        map.on('mouseenter', 'clusters', function () {\n        map.getCanvas().style.cursor = 'pointer';\n        });\n        map.on('mouseleave', 'clusters', function () {\n        map.getCanvas().style.cursor = '';\n        });\n        });\n\n}, [])\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link href='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css' rel='stylesheet' />\n      </Head>\n  \n        <div style={{ width: '100%', height: '30rem' }} id=\"myMap\">\n        </div>\n      \n      <footer className={styles.footer}>\n    \n      </footer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}