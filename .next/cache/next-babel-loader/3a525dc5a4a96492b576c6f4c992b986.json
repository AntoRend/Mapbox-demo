{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/Home.module.css';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'; // import localData from '../public/files/test.geojson'\n\nimport localData from '../public/files/last_test3.geojson'; // const localData = require('json-loader!../public/files/last_test3.geojson')\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\nexport default function Home() {\n  _s();\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1];\n\n  useEffect(function () {\n    setPageIsMounted(true);\n    var map = new mapboxgl.Map({\n      container: 'myMap',\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [-92.107970096021816, 17.870719256479013],\n      zoom: 7\n    });\n    console.log(localData); // Show an alert if the browser does not support Mapbox GL\n\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    } // Add zoom and rotation controls to the map.\n\n\n    map.addControl(new mapboxgl.NavigationControl()); // Add geolocation button\n\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    map.on('load', function () {\n      // Add a new source from our GeoJSON data and\n      // set the 'cluster' option to true. GL-JS will\n      // add the point_count property to your source data.\n      map.addSource('earthquakes', {\n        type: 'geojson',\n        // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n        // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\n        data: localData,\n        cluster: true,\n        clusterMaxZoom: 14,\n        // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n\n      }); // map.addLayer({\n      //   id: 'clusters',\n      //   type: 'circle',\n      //   source: 'earthquakes',\n      //   filter: ['has', 'point_count'],\n      //   paint: {\n      //   // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n      //   // with three steps to implement three types of circles:\n      //   //   * Blue, 20px circles when point count is less than 100\n      //   //   * Yellow, 30px circles when point count is between 100 and 750\n      //   //   * Pink, 40px circles when point count is greater than or equal to 750\n      //   'circle-color': [\n      //   'step',\n      //   ['get', 'point_count'],\n      //   '#51bbd6',\n      //   100,\n      //   '#f1f075',\n      //   750,\n      //   '#f28cb1'\n      //   ],\n      //   'circle-radius': [\n      //   'step',\n      //   ['get', 'point_count'],\n      //   20,\n      //   100,\n      //   30,\n      //   750,\n      //   40\n      //   ]\n      //   }\n      //   });\n\n      map.addLayer({\n        'id': 'earthquakes',\n        'type': 'fill',\n        'source': 'earthquakes',\n        'layout': {},\n        'paint': {\n          'fill-color': '#fff',\n          'fill-opacity': 0.8\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '30rem'\n      },\n      id: \"myMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"ZxYVMPinGoeBJwpDQu68kIN3X+I=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js"],"names":["Head","useEffect","useState","styles","mapboxgl","localData","accessToken","process","env","MAPBOX_TOKEN","Home","pageIsMounted","setPageIsMounted","map","Map","container","style","center","zoom","console","log","supported","alert","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","on","addSource","type","data","cluster","clusterMaxZoom","clusterRadius","addLayer","width","height","footer"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { useEffect, useState } from 'react'\nimport styles from '../styles/Home.module.css'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\n// import localData from '../public/files/test.geojson'\nimport localData from '../public/files/last_test3.geojson'\n// const localData = require('json-loader!../public/files/last_test3.geojson')\n\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nexport default function Home() {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  useEffect(() => {\n    setPageIsMounted(true)\n      const map = new mapboxgl.Map({\n        container: 'myMap',\n        style: 'mapbox://styles/mapbox/dark-v10',\n        center: [-92.107970096021816, 17.870719256479013],\n        zoom: 7\n      });\n\n      console.log(localData)\n\n      // Show an alert if the browser does not support Mapbox GL\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    }\n    \n      // Add zoom and rotation controls to the map.\n      map.addControl(new mapboxgl.NavigationControl());\n\n      // Add geolocation button\n      map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true,\n          },\n          trackUserLocation: true,\n        })\n      );\n\n      map.on('load', function () {\n        // Add a new source from our GeoJSON data and\n        // set the 'cluster' option to true. GL-JS will\n        // add the point_count property to your source data.\n        map.addSource('earthquakes', {\n        type: 'geojson',\n        // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n        // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\n        data: localData,\n        cluster: true,\n        clusterMaxZoom: 14, // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n        });\n\n        // map.addLayer({\n        //   id: 'clusters',\n        //   type: 'circle',\n        //   source: 'earthquakes',\n        //   filter: ['has', 'point_count'],\n        //   paint: {\n        //   // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n        //   // with three steps to implement three types of circles:\n        //   //   * Blue, 20px circles when point count is less than 100\n        //   //   * Yellow, 30px circles when point count is between 100 and 750\n        //   //   * Pink, 40px circles when point count is greater than or equal to 750\n        //   'circle-color': [\n        //   'step',\n        //   ['get', 'point_count'],\n        //   '#51bbd6',\n        //   100,\n        //   '#f1f075',\n        //   750,\n        //   '#f28cb1'\n        //   ],\n        //   'circle-radius': [\n        //   'step',\n        //   ['get', 'point_count'],\n        //   20,\n        //   100,\n        //   30,\n        //   750,\n        //   40\n        //   ]\n        //   }\n        //   });\n\n        map.addLayer({\n          'id': 'earthquakes',\n          'type': 'fill',\n          'source': 'earthquakes',\n          'layout': {},\n          'paint': {\n          'fill-color': '#fff',\n          'fill-opacity': 0.8\n          }\n          });\n\n        });\n\n}, [])\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link href='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css' rel='stylesheet' />\n      </Head>\n  \n        <div style={{ width: '100%', height: '30rem' }} id=\"myMap\">\n        </div>\n      \n      <footer className={styles.footer}>\n    \n      </footer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}