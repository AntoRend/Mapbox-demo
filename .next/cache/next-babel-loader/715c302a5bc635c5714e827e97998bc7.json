{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/Home.module.css';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\nimport data from '../public/files/last_test3.geojson';\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\nexport default function Home() {\n  _s();\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1];\n\n  useEffect(function () {\n    setPageIsMounted(true);\n    var map = new mapboxgl.Map({\n      container: \"mapboxContainer\",\n      style: \"mapbox://styles/mapbox/satellite-streets-v11\",\n      center: [-92.2891903, 15.1570307],\n      // starting position\n      zoom: 15,\n      // starting zoom\n      pitch: 30\n    }); // Show an alert if the browser does not support Mapbox GL\n\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    } // Add zoom and rotation controls to the map.\n\n\n    map.addControl(new mapboxgl.NavigationControl()); // Add geolocation button\n\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    map.on(\"load\", function () {\n      map.addSource(\"earthquakes\", {\n        type: \"geojson\",\n        // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n        // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\n        data: \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\",\n        cluster: true,\n        clusterMaxZoom: 14,\n        // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n\n      });\n      map.addLayer({\n        id: \"clusters\"\n      });\n      map.addLayer({\n        id: \"cluster-count\"\n      });\n      map.addLayer({\n        id: \"unclustered-point\"\n      }); // inspect a cluster on click\n\n      map.on(\"click\", \"clusters\", function (e) {\n        var features = map.queryRenderedFeatures(e.point, {\n          layers: [\"clusters\"]\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource(\"earthquakes\").getClusterExpansionZoom(clusterId, function (err, zoom) {\n          if (err) return;\n          map.easeTo({\n            center: features[0].geometry.coordinates,\n            zoom: zoom\n          });\n        });\n      }); // When a click event occurs on a feature in\n      // the unclustered-point layer, open a popup at\n      // the location of the feature, with\n      // description HTML from its properties.\n\n      map.on(\"click\", \"unclustered-point\", function (e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var mag = e.features[0].properties.mag;\n        var tsunami;\n\n        if (e.features[0].properties.tsunami === 1) {\n          tsunami = \"yes\";\n        } else {\n          tsunami = \"no\";\n        } // Ensure that if the map is zoomed out such that\n        // multiple copies of the feature are visible, the\n        // popup appears over the copy being pointed to.\n\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML(\"magnitude: \" + mag + \"<br>Was there a tsunami?: \" + tsunami).addTo(map);\n      });\n      map.on(\"mouseenter\", \"clusters\", function () {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n      map.on(\"mouseleave\", \"clusters\", function () {\n        map.getCanvas().style.cursor = \"\";\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '30rem'\n      },\n      id: \"mapboxContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"ZxYVMPinGoeBJwpDQu68kIN3X+I=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js"],"names":["Head","useEffect","useState","styles","mapboxgl","data","accessToken","process","env","MAPBOX_TOKEN","Home","pageIsMounted","setPageIsMounted","map","Map","container","style","center","zoom","pitch","supported","alert","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","on","addSource","type","cluster","clusterMaxZoom","clusterRadius","addLayer","id","e","features","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","geometry","coordinates","slice","mag","tsunami","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","width","height","footer"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { useEffect, useState } from 'react'\nimport styles from '../styles/Home.module.css'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\nimport data from '../public/files/last_test3.geojson'\n\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nexport default function Home() {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  useEffect(() => {\n    setPageIsMounted(true)\n      const map = new mapboxgl.Map({\n        container: \"mapboxContainer\",\n        style: \"mapbox://styles/mapbox/satellite-streets-v11\",\n        center: [-92.2891903, 15.1570307], // starting position\n        zoom: 15, // starting zoom\n        pitch: 30\n      });\n\n      // Show an alert if the browser does not support Mapbox GL\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    }\n    \n      // Add zoom and rotation controls to the map.\n      map.addControl(new mapboxgl.NavigationControl());\n\n      // Add geolocation button\n      map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true,\n          },\n          trackUserLocation: true,\n        })\n      );\n\n      map.on(\"load\", function () {\n        map.addSource(\"earthquakes\", {\n          type: \"geojson\",\n          // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n          // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\n          data:\n            \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\",\n          cluster: true,\n          clusterMaxZoom: 14, // Max zoom to cluster points on\n          clusterRadius: 50, // Radius of each cluster when clustering points (defaults to 50)\n        });\n      \n        map.addLayer({\n          id: \"clusters\",\n          \n        });\n      \n        map.addLayer({\n          id: \"cluster-count\",\n          \n        });\n      \n        map.addLayer({\n          id: \"unclustered-point\",\n          \n        });\n      \n        // inspect a cluster on click\n        map.on(\"click\", \"clusters\", function (e) {\n          var features = map.queryRenderedFeatures(e.point, {\n            layers: [\"clusters\"],\n          });\n          var clusterId = features[0].properties.cluster_id;\n          map\n            .getSource(\"earthquakes\")\n            .getClusterExpansionZoom(clusterId, function (err, zoom) {\n              if (err) return;\n      \n              map.easeTo({\n                center: features[0].geometry.coordinates,\n                zoom: zoom,\n              });\n            });\n        });\n      \n        // When a click event occurs on a feature in\n        // the unclustered-point layer, open a popup at\n        // the location of the feature, with\n        // description HTML from its properties.\n        map.on(\"click\", \"unclustered-point\", function (e) {\n          var coordinates = e.features[0].geometry.coordinates.slice();\n          var mag = e.features[0].properties.mag;\n          var tsunami;\n      \n          if (e.features[0].properties.tsunami === 1) {\n            tsunami = \"yes\";\n          } else {\n            tsunami = \"no\";\n          }\n      \n          // Ensure that if the map is zoomed out such that\n          // multiple copies of the feature are visible, the\n          // popup appears over the copy being pointed to.\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n      \n          new mapboxgl.Popup()\n            .setLngLat(coordinates)\n            .setHTML(\n              \"magnitude: \" + mag + \"<br>Was there a tsunami?: \" + tsunami\n            )\n            .addTo(map);\n        });\n      \n        map.on(\"mouseenter\", \"clusters\", function () {\n          map.getCanvas().style.cursor = \"pointer\";\n        });\n        map.on(\"mouseleave\", \"clusters\", function () {\n          map.getCanvas().style.cursor = \"\";\n        });\n      });\n\n}, [])\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link href='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css' rel='stylesheet' />\n      </Head>\n  \n        <div style={{ width: '100%', height: '30rem' }} id=\"mapboxContainer\">\n        </div>\n      \n      <footer className={styles.footer}>\n    \n      </footer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}