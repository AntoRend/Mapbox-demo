{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js\";\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/Home.module.css';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'; // import localData from '../public/files/test.geojson'\n// import localData from '../public/files/polygon.geojson'\n\nimport localData from '../public/files/last_test3.geojson'; // import localData from '../public/files/last_test2.geojson'\n// import localData from '../public/files/last_test.geojson'\n// const localData = require('json-loader!../public/files/last_test3.geojson')\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\nexport default function Home() {\n  const {\n    0: pageIsMounted,\n    1: setPageIsMounted\n  } = useState(false);\n  useEffect(() => {\n    setPageIsMounted(true);\n    const map = new mapboxgl.Map({\n      // Html container for the map\n      container: 'myMap',\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [-92.107970096021816, 17.870719256479013],\n      zoom: 10\n    }); // console.log(localData)\n    // Show an alert if the browser does not support Mapbox GL\n\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    } // Add zoom and rotation controls to the map.\n\n\n    map.addControl(new mapboxgl.NavigationControl()); // Add geolocation user button\n\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n    map.on('load', function () {\n      // Add a new source from our GeoJSON data and. GL-JS will\n      // add the point_count property to your source data.\n      map.addSource('myMap', {\n        type: 'geojson',\n        data: localData\n      });\n      map.addLayer({\n        'id': 'myMap',\n        'type': 'fill',\n        'source': 'myMap',\n        'layout': {},\n        'paint': {\n          'fill-color': '#fff',\n          'fill-opacity': 0.8\n        }\n      }); // Heat Map\n\n      const map2 = new mapboxgl.Map({\n        // Html container for the map\n        container: 'heatMap',\n        style: 'mapbox://styles/mapbox/dark-v10',\n        center: [-92.107970096021816, 17.870719256479013],\n        zoom: 10\n      });\n    });\n    map.on('load', function () {\n      // Add a geojson point source.\n      // Heatmap layers also work with a vector tile source.\n      map.addSource('heatMap', {\n        'type': 'geojson',\n        'data': 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'\n      });\n      map.addLayer({\n        'id': 'earthquakes-heat',\n        'type': 'heatmap',\n        'source': 'heatMap',\n        'maxzoom': 9,\n        'paint': {\n          // Increase the heatmap weight based on frequency and property magnitude\n          'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n          // Increase the heatmap color weight weight by zoom level\n          // heatmap-intensity is a multiplier on top of heatmap-weight\n          'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n          // Begin color ramp at 0-stop with a 0-transparancy color\n          // to create a blur-like effect.\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.4, 'rgb(209,229,240)', 0.6, 'rgb(253,219,199)', 0.8, 'rgb(239,138,98)', 1, 'rgb(178,24,43)'],\n          // Adjust the heatmap radius by zoom level\n          'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n          // Transition from heatmap to circle layer by zoom level\n          'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n        }\n      }, 'waterway-label');\n      map.addLayer({\n        'id': 'earthquakes-point',\n        'type': 'circle',\n        'source': 'heatMap',\n        'minzoom': 7,\n        'paint': {\n          // Size circle radius by earthquake magnitude and zoom level\n          'circle-radius': ['interpolate', ['linear'], ['zoom'], 7, ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4], 16, ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]],\n          // Color circle by earthquake magnitude\n          'circle-color': ['interpolate', ['linear'], ['get', 'mag'], 1, 'rgba(33,102,172,0)', 2, 'rgb(103,169,207)', 3, 'rgb(209,229,240)', 4, 'rgb(253,219,199)', 5, 'rgb(239,138,98)', 6, 'rgb(178,24,43)'],\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          // Transition from heatmap to circle layer by zoom level\n          'circle-opacity': ['interpolate', ['linear'], ['zoom'], 7, 0, 8, 1]\n        }\n      }, 'waterway-label');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '30rem'\n      },\n      id: \"myMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '30rem'\n      },\n      id: \"heatMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/index.js"],"names":["Head","useEffect","useState","styles","mapboxgl","localData","accessToken","process","env","MAPBOX_TOKEN","Home","pageIsMounted","setPageIsMounted","map","Map","container","style","center","zoom","supported","alert","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","on","addSource","type","data","addLayer","map2","width","height","footer"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { useEffect, useState } from 'react'\nimport styles from '../styles/Home.module.css'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\n// import localData from '../public/files/test.geojson'\n// import localData from '../public/files/polygon.geojson'\nimport localData from '../public/files/last_test3.geojson'\n// import localData from '../public/files/last_test2.geojson'\n// import localData from '../public/files/last_test.geojson'\n// const localData = require('json-loader!../public/files/last_test3.geojson')\n\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nexport default function Home() {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  useEffect(() => {\n    setPageIsMounted(true)\n      const map = new mapboxgl.Map({\n        // Html container for the map\n        container: 'myMap',\n        style: 'mapbox://styles/mapbox/dark-v10',\n        center: [-92.107970096021816, 17.870719256479013],\n        zoom: 10\n      });\n\n      // console.log(localData)\n\n      // Show an alert if the browser does not support Mapbox GL\n    if (!mapboxgl.supported()) {\n      alert('Your browser does not support Mapbox GL');\n    }\n    \n      // Add zoom and rotation controls to the map.\n      map.addControl(new mapboxgl.NavigationControl());\n\n      // Add geolocation user button\n      map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true,\n          },\n          trackUserLocation: true,\n        })\n      );\n\n      map.on('load', function () {\n        // Add a new source from our GeoJSON data and. GL-JS will\n        // add the point_count property to your source data.\n        map.addSource('myMap', {\n        type: 'geojson',\n        data: localData,\n        });\n\n        \n\n        map.addLayer({\n          'id': 'myMap',\n          'type': 'fill',\n          'source': 'myMap',\n          'layout': {},\n          'paint': {\n          'fill-color': '#fff',\n          'fill-opacity': 0.8\n          }\n          });\n\n          // Heat Map\n          const map2 = new mapboxgl.Map({\n            // Html container for the map\n            container: 'heatMap',\n            style: 'mapbox://styles/mapbox/dark-v10',\n            center: [-92.107970096021816, 17.870719256479013],\n            zoom: 10\n          });\n        });\n\n        map.on('load', function () {\n          // Add a geojson point source.\n          // Heatmap layers also work with a vector tile source.\n          map.addSource('heatMap', {\n          'type': 'geojson',\n          'data':\n          'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'\n          });\n           \n          map.addLayer(\n          {\n          'id': 'earthquakes-heat',\n          'type': 'heatmap',\n          'source': 'heatMap',\n          'maxzoom': 9,\n          'paint': {\n          // Increase the heatmap weight based on frequency and property magnitude\n          'heatmap-weight': [\n          'interpolate',\n          ['linear'],\n          ['get', 'mag'],\n          0,\n          0,\n          6,\n          1\n          ],\n          // Increase the heatmap color weight weight by zoom level\n          // heatmap-intensity is a multiplier on top of heatmap-weight\n          'heatmap-intensity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          0,\n          1,\n          9,\n          3\n          ],\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n          // Begin color ramp at 0-stop with a 0-transparancy color\n          // to create a blur-like effect.\n          'heatmap-color': [\n          'interpolate',\n          ['linear'],\n          ['heatmap-density'],\n          0,\n          'rgba(33,102,172,0)',\n          0.2,\n          'rgb(103,169,207)',\n          0.4,\n          'rgb(209,229,240)',\n          0.6,\n          'rgb(253,219,199)',\n          0.8,\n          'rgb(239,138,98)',\n          1,\n          'rgb(178,24,43)'\n          ],\n          // Adjust the heatmap radius by zoom level\n          'heatmap-radius': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          0,\n          2,\n          9,\n          20\n          ],\n          // Transition from heatmap to circle layer by zoom level\n          'heatmap-opacity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          7,\n          1,\n          9,\n          0\n          ]\n          }\n          },\n          'waterway-label'\n          );\n           \n          map.addLayer(\n          {\n          'id': 'earthquakes-point',\n          'type': 'circle',\n          'source': 'heatMap',\n          'minzoom': 7,\n          'paint': {\n          // Size circle radius by earthquake magnitude and zoom level\n          'circle-radius': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          7,\n          ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4],\n          16,\n          ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]\n          ],\n          // Color circle by earthquake magnitude\n          'circle-color': [\n          'interpolate',\n          ['linear'],\n          ['get', 'mag'],\n          1,\n          'rgba(33,102,172,0)',\n          2,\n          'rgb(103,169,207)',\n          3,\n          'rgb(209,229,240)',\n          4,\n          'rgb(253,219,199)',\n          5,\n          'rgb(239,138,98)',\n          6,\n          'rgb(178,24,43)'\n          ],\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          // Transition from heatmap to circle layer by zoom level\n          'circle-opacity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          7,\n          0,\n          8,\n          1\n          ]\n          }\n          },\n          'waterway-label'\n          );\n          });\n\n}, [])\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link href='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css' rel='stylesheet' />\n      </Head>\n  \n        <div style={{ width: '100%', height: '30rem' }} id=\"myMap\">\n        </div>\n        <br/><br/>\n        <div style={{ width: '100%', height: '30rem' }} id=\"heatMap\">\n        </div>\n      \n      <footer className={styles.footer}>\n    \n      </footer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}