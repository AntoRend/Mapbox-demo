{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/components/heatMap/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'; // import data from '../../../public/files/trees.geojson'\n// external elements required\n// container, styleMap, center, zoom, \n\nvar heatMap = function heatMap(props) {\n  _s();\n\n  var _props$dataMap = props.dataMap,\n      container = _props$dataMap.container,\n      withContainer = _props$dataMap.withContainer,\n      heigthContainer = _props$dataMap.heigthContainer,\n      styleMap = _props$dataMap.styleMap,\n      center = _props$dataMap.center,\n      zoom = _props$dataMap.zoom,\n      addSourceName = _props$dataMap.addSourceName,\n      typeSource = _props$dataMap.typeSource,\n      dataSource = _props$dataMap.dataSource,\n      propertyLayer = _props$dataMap.propertyLayer,\n      typeLayer = _props$dataMap.typeLayer,\n      colorOne = _props$dataMap.colorOne,\n      colorTwo = _props$dataMap.colorTwo,\n      colorThree = _props$dataMap.colorThree,\n      colorFour = _props$dataMap.colorFour,\n      colorFive = _props$dataMap.colorFive,\n      colorSix = _props$dataMap.colorSix,\n      colorSeven = _props$dataMap.colorSeven,\n      backgroundImgPopUp = _props$dataMap.backgroundImgPopUp,\n      htmlPopUp = _props$dataMap.htmlPopUp;\n\n  var _useState = useState(false),\n      pageIsMounted = _useState[0],\n      setPageIsMounted = _useState[1]; // useEffect(() => { \n  //   setPageIsMounted(true)\n\n\n  var map = new mapboxgl.Map({\n    // Html container for the map\n    container: container,\n    style: styleMap,\n    center: center,\n    zoom: zoom\n  }); // map.on('load', function() {\n  //       // data source added here\n  //   map.addSource(addSourceName, {\n  //     type: typeSource,\n  //     data: dataSource\n  //   })\n  //   // add heatmap layer here\n  //   map.addLayer({\n  //     id: `${addSourceName}-heat`,\n  //     type: 'heatmap',\n  //     source: addSourceName,\n  //     maxzoom: 15,\n  //     paint: {\n  //       // increase weight as diameter breast height increases\n  //       'heatmap-weight': {\n  //         property: propertyLayer,\n  //         type: typeLayer,\n  //         stops: [\n  //           [1, 0],\n  //           [62, 1]\n  //         ]\n  //       },\n  //       // assign color values be applied to points depending on their density\n  //       'heatmap-color': [\n  //         'interpolate',\n  //         ['linear'],\n  //         ['heatmap-density'],\n  //         0, colorSeven,\n  //         0.2, colorFive,\n  //         0.4, colorFour,\n  //         0.6, colorThree,\n  //         0.8, colorOne\n  //       ],\n  //       // increase radius as zoom increases\n  //       'heatmap-radius': {\n  //         stops: [\n  //           [11, 15],\n  //           [15, 20]\n  //         ]\n  //       },\n  //       'heatmap-opacity': {\n  //         default: 1,\n  //         stops: [\n  //           [14, 1],\n  //           [15, 0]\n  //         ]\n  //       },\n  //     }\n  //   }, 'waterway-label')\n  //   //add circle layer here  \n  //   map.addLayer({\n  //     id: `${addSourceName}-point`,\n  //     type: 'circle',\n  //     source: addSourceName,\n  //     minzoom: 14,\n  //     paint: {\n  //       // increase the radius of the circle as the zoom level and dbh value increases\n  //       'circle-radius': {\n  //         property: propertyLayer,\n  //         type: typeLayer,\n  //         stops: [\n  //           [{ zoom: 15, value: 1 }, 5],\n  //           [{ zoom: 15, value: 62 }, 10],\n  //           [{ zoom: 22, value: 1 }, 20],\n  //           [{ zoom: 22, value: 62 }, 50],\n  //         ]\n  //       },\n  //       'circle-color': {\n  //         property: propertyLayer,\n  //         type: typeLayer,\n  //         stops: [\n  //           [0, colorSeven],\n  //           [10, colorSix],\n  //           [20, colorFive],\n  //           [30, colorFour],\n  //           [40, colorThree],\n  //           [50, colorTwo],\n  //           [60, colorOne]\n  //         ]\n  //       },\n  //       'circle-stroke-color': 'white',\n  //       'circle-stroke-width': 1,\n  //       'circle-opacity': {\n  //         stops: [\n  //           [14, 0],\n  //           [15, 1]\n  //         ]\n  //       }\n  //     }\n  //   }, 'waterway-label');\n  //   map.on('click', `${addSourceName}-point`, function(e) {\n  //     new mapboxgl.Popup()\n  //       .setLngLat(e.features[0].geometry.coordinates)\n  //       .setHTML(`\n  //       <div className=\"popup__container\" style=\"background-image: url(${backgroundImgPopUp});\">\n  //         ${htmlPopUp}\n  //       </div>\n  //       `)\n  //       // .setHTML('<br><b>Diameter:</b> ' + e.features[0].properties.dbh)\n  //       .addTo(map);\n  //   });\n  // })\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"\".concat(withContainer, \"%\"),\n      height: \"\".concat(heigthContainer, \"vh\")\n    },\n    id: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(heatMap, \"g46r8b8yU5WD5WvGHbIkTorzjr8=\");\n\nexport default heatMap;","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/components/heatMap/index.js"],"names":["useEffect","useState","mapboxgl","heatMap","props","dataMap","container","withContainer","heigthContainer","styleMap","center","zoom","addSourceName","typeSource","dataSource","propertyLayer","typeLayer","colorOne","colorTwo","colorThree","colorFour","colorFive","colorSix","colorSeven","backgroundImgPopUp","htmlPopUp","pageIsMounted","setPageIsMounted","map","Map","style","width","height"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,QAAP,MAAqB,6BAArB,C,CAEA;AAEA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA;;AAAA,uBAsBrBA,KAAK,CAACC,OAtBe;AAAA,MAEvBC,SAFuB,kBAEvBA,SAFuB;AAAA,MAGvBC,aAHuB,kBAGvBA,aAHuB;AAAA,MAIvBC,eAJuB,kBAIvBA,eAJuB;AAAA,MAKvBC,QALuB,kBAKvBA,QALuB;AAAA,MAMvBC,MANuB,kBAMvBA,MANuB;AAAA,MAOvBC,IAPuB,kBAOvBA,IAPuB;AAAA,MAQvBC,aARuB,kBAQvBA,aARuB;AAAA,MASvBC,UATuB,kBASvBA,UATuB;AAAA,MAUvBC,UAVuB,kBAUvBA,UAVuB;AAAA,MAWvBC,aAXuB,kBAWvBA,aAXuB;AAAA,MAYvBC,SAZuB,kBAYvBA,SAZuB;AAAA,MAavBC,QAbuB,kBAavBA,QAbuB;AAAA,MAcvBC,QAduB,kBAcvBA,QAduB;AAAA,MAevBC,UAfuB,kBAevBA,UAfuB;AAAA,MAgBvBC,SAhBuB,kBAgBvBA,SAhBuB;AAAA,MAiBvBC,SAjBuB,kBAiBvBA,SAjBuB;AAAA,MAkBvBC,QAlBuB,kBAkBvBA,QAlBuB;AAAA,MAmBvBC,UAnBuB,kBAmBvBA,UAnBuB;AAAA,MAoBvBC,kBApBuB,kBAoBvBA,kBApBuB;AAAA,MAqBvBC,SArBuB,kBAqBvBA,SArBuB;;AAAA,kBAwBiBxB,QAAQ,CAAC,KAAD,CAxBzB;AAAA,MAwBlByB,aAxBkB;AAAA,MAwBHC,gBAxBG,iBA0BzB;AACA;;;AACE,MAAMC,GAAG,GAAG,IAAI1B,QAAQ,CAAC2B,GAAb,CAAiB;AAC3B;AACAvB,IAAAA,SAAS,EAAEA,SAFgB;AAG3BwB,IAAAA,KAAK,EAAErB,QAHoB;AAI3BC,IAAAA,MAAM,EAAEA,MAJmB;AAK3BC,IAAAA,IAAI,EAAEA;AALqB,GAAjB,CAAZ,CA5BuB,CAoCvsBACE;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,YAAKxB,aAAL,MAAP;AAA8ByB,MAAAA,MAAM,YAAKxB,eAAL;AAApC,KAAZ;AAA4E,IAAA,EAAE,EAAEF;AAAhF;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAvJD;;GAAMH,O;;AAyJN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\n\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\n// import data from '../../../public/files/trees.geojson'\n\n// external elements required\n// container, styleMap, center, zoom, \n\nconst heatMap = (props) => {\n  const {\n    container, // 'componentMap'\n    withContainer, // with style prop\n    heigthContainer, // heigth style prop\n    styleMap, // 'mapbox://styles/mapbox/dark-v10'\n    center, // [-79.999732, 40.4374]\n    zoom,  // 11\n    addSourceName, // 'trees'\n    typeSource, // 'geojson'\n    dataSource, // data\n    propertyLayer, // 'dbh' (the name of property on geojson)\n    typeLayer, // 'exponential'\n    colorOne,\n    colorTwo,\n    colorThree,\n    colorFour, \n    colorFive, \n    colorSix,\n    colorSeven,\n    backgroundImgPopUp,\n    htmlPopUp\n  } = props.dataMap\n\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n\n  // useEffect(() => { \n  //   setPageIsMounted(true)\n    const map = new mapboxgl.Map({\n      // Html container for the map\n      container: container,\n      style: styleMap,\n      center: center,\n      zoom: zoom\n    });\n\n    // map.on('load', function() {\n    //       // data source added here\n    //   map.addSource(addSourceName, {\n    //     type: typeSource,\n    //     data: dataSource\n    //   })\n\n    //   // add heatmap layer here\n    //   map.addLayer({\n    //     id: `${addSourceName}-heat`,\n    //     type: 'heatmap',\n    //     source: addSourceName,\n    //     maxzoom: 15,\n    //     paint: {\n    //       // increase weight as diameter breast height increases\n    //       'heatmap-weight': {\n    //         property: propertyLayer,\n    //         type: typeLayer,\n    //         stops: [\n    //           [1, 0],\n    //           [62, 1]\n    //         ]\n    //       },\n    //       // assign color values be applied to points depending on their density\n    //       'heatmap-color': [\n    //         'interpolate',\n    //         ['linear'],\n    //         ['heatmap-density'],\n    //         0, colorSeven,\n    //         0.2, colorFive,\n    //         0.4, colorFour,\n    //         0.6, colorThree,\n    //         0.8, colorOne\n    //       ],\n    //       // increase radius as zoom increases\n    //       'heatmap-radius': {\n    //         stops: [\n    //           [11, 15],\n    //           [15, 20]\n    //         ]\n    //       },\n    //       'heatmap-opacity': {\n    //         default: 1,\n    //         stops: [\n    //           [14, 1],\n    //           [15, 0]\n    //         ]\n    //       },\n    //     }\n    //   }, 'waterway-label')\n\n    //   //add circle layer here  \n    //   map.addLayer({\n    //     id: `${addSourceName}-point`,\n    //     type: 'circle',\n    //     source: addSourceName,\n    //     minzoom: 14,\n    //     paint: {\n    //       // increase the radius of the circle as the zoom level and dbh value increases\n    //       'circle-radius': {\n    //         property: propertyLayer,\n    //         type: typeLayer,\n    //         stops: [\n    //           [{ zoom: 15, value: 1 }, 5],\n    //           [{ zoom: 15, value: 62 }, 10],\n    //           [{ zoom: 22, value: 1 }, 20],\n    //           [{ zoom: 22, value: 62 }, 50],\n    //         ]\n    //       },\n    //       'circle-color': {\n    //         property: propertyLayer,\n    //         type: typeLayer,\n    //         stops: [\n    //           [0, colorSeven],\n    //           [10, colorSix],\n    //           [20, colorFive],\n    //           [30, colorFour],\n    //           [40, colorThree],\n    //           [50, colorTwo],\n    //           [60, colorOne]\n    //         ]\n    //       },\n    //       'circle-stroke-color': 'white',\n    //       'circle-stroke-width': 1,\n    //       'circle-opacity': {\n    //         stops: [\n    //           [14, 0],\n    //           [15, 1]\n    //         ]\n    //       }\n    //     }\n    //   }, 'waterway-label');\n      \n    //   map.on('click', `${addSourceName}-point`, function(e) {\n    //     new mapboxgl.Popup()\n    //       .setLngLat(e.features[0].geometry.coordinates)\n    //       .setHTML(`\n    //       <div className=\"popup__container\" style=\"background-image: url(${backgroundImgPopUp});\">\n    //         ${htmlPopUp}\n    //       </div>\n    //       `)\n    //       // .setHTML('<br><b>Diameter:</b> ' + e.features[0].properties.dbh)\n    //       .addTo(map);\n    //   });\n\n    // })\n  \n  // })\n\n  return(\n    <div style={{ width: `${withContainer}%`, height: `${heigthContainer}vh` }} id={container}>\n\n    </div>\n  )\n\n}\n\nexport default heatMap"]},"metadata":{},"sourceType":"module"}