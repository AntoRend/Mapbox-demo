{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/layers.js\";\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nconst dynamicLayer = () => {\n  const {\n    0: pageIsMounted,\n    1: setPageIsMounted\n  } = useState(false);\n  useEffect(() => {\n    setPageIsMounted(true);\n    const map = new mapboxgl.Map({\n      container: 'dynamicLayer-map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      zoom: 15,\n      center: [-71.97722138410576, -13.517379300798098]\n    }); // Wait until the map has finished loading.\n    // Add a custom vector tileset source. This tileset contains\n\n    map.on('load', function () {\n      // point features representing museums. Each feature contains\n      // three properties. For example:\n      // {\n      //     alt_name: \"Museo Arqueologico\",\n      //     name: \"Museo Inka\",\n      //     tourism: \"museum\"\n      // }\n      map.addSource('museums', {\n        type: 'vector',\n        url: 'mapbox://mapbox.2opop9hr'\n      });\n      map.addLayer({\n        'id': 'museums',\n        'type': 'circle',\n        'source': 'museums',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible'\n        },\n        'paint': {\n          'circle-radius': 8,\n          'circle-color': 'rgba(55,148,179,1)'\n        },\n        'source-layer': 'museum-cusco'\n      }); // Add the Mapbox Terrain v2 vector tileset. Read more about\n      // the structure of data in this tileset in the documentation:\n      // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n\n      map.addSource('contours', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-terrain-v2'\n      });\n      map.addLayer({\n        'id': 'contours',\n        'type': 'line',\n        'source': 'contours',\n        'source-layer': 'contour',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible',\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#877b59',\n          'line-width': 1\n        }\n      });\n    }); // After the last frame rendered before the map enters an \"idle\" state.\n\n    map.on('idle', function () {\n      // If these two layers have been added to the style,\n      // add the toggle buttons.\n      if (map.getLayer('contours') && map.getLayer('museums')) {\n        // Enumerate ids of the layers.\n        var toggleableLayerIds = ['contours', 'museums']; // Set up the corresponding toggle button for each layer.\n\n        for (var i = 0; i < toggleableLayerIds.length; i++) {\n          var id = toggleableLayerIds[i];\n\n          if (!document.getElementById(id)) {\n            // Create a link.\n            var link = document.createElement('a');\n            link.id = id;\n            link.href = '#';\n            link.textContent = id;\n            link.className = 'active'; // Show or hide layer when the toggle is clicked.\n\n            link.onclick = function (e) {\n              var clickedLayer = this.textContent;\n              e.preventDefault();\n              e.stopPropagation();\n              var visibility = map.getLayoutProperty(clickedLayer, 'visibility'); // Toggle layer visibility by changing the layout object's visibility property.\n\n              if (visibility === 'visible') {\n                map.setLayoutProperty(clickedLayer, 'visibility', 'none');\n                this.className = '';\n              } else {\n                this.className = 'active';\n                map.setLayoutProperty(clickedLayer, 'visibility', 'visible');\n              }\n            };\n\n            var layers = document.getElementById('dynamicLayer-menu');\n            layers.appendChild(link);\n          }\n        }\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"link\", {\n        href: \"https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css\",\n        rel: \"stylesheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      id: \"dynamicLayer-menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: \"height: 100vh\",\n      id: \"dynamicLayer-map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default dynamicLayer;","map":{"version":3,"sources":["/home/intermezzto/Documentos/codeProyects/mapbox-project/pages/layers.js"],"names":["Head","useEffect","useState","mapboxgl","accessToken","process","env","MAPBOX_TOKEN","dynamicLayer","pageIsMounted","setPageIsMounted","map","Map","container","style","zoom","center","on","addSource","type","url","addLayer","getLayer","toggleableLayerIds","i","length","id","document","getElementById","link","createElement","href","textContent","className","onclick","e","clickedLayer","preventDefault","stopPropagation","visibility","getLayoutProperty","setLayoutProperty","layers","appendChild"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { useEffect, useState } from 'react'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl.js'\n\nmapboxgl.accessToken = process.env.MAPBOX_TOKEN;\n\nconst dynamicLayer = () => {\n  const [pageIsMounted, setPageIsMounted] = useState(false)\n  useEffect(() => {\n    setPageIsMounted(true)\n\n    const map = new mapboxgl.Map({\n      container: 'dynamicLayer-map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      zoom: 15,\n      center: [-71.97722138410576, -13.517379300798098]\n      });\n\n      // Wait until the map has finished loading.\n      // Add a custom vector tileset source. This tileset contains\n    map.on('load', function () {\n      // point features representing museums. Each feature contains\n      // three properties. For example:\n      // {\n      //     alt_name: \"Museo Arqueologico\",\n      //     name: \"Museo Inka\",\n      //     tourism: \"museum\"\n      // }\n      map.addSource('museums', {\n        type: 'vector',\n        url: 'mapbox://mapbox.2opop9hr'\n      });\n      map.addLayer({\n        'id': 'museums',\n        'type': 'circle',\n        'source': 'museums',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible'\n        },\n        'paint': {\n          'circle-radius': 8,\n          'circle-color': 'rgba(55,148,179,1)'\n        },\n        'source-layer': 'museum-cusco'\n      });\n\n      // Add the Mapbox Terrain v2 vector tileset. Read more about\n      // the structure of data in this tileset in the documentation:\n      // https://docs.mapbox.com/vector-tiles/reference/mapbox-terrain-v2/\n      map.addSource('contours', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-terrain-v2'\n      });\n      map.addLayer({\n        'id': 'contours',\n        'type': 'line',\n        'source': 'contours',\n        'source-layer': 'contour',\n        'layout': {\n          // Make the layer visible by default.\n          'visibility': 'visible',\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#877b59',\n          'line-width': 1\n        }\n      });\n    });\n\n      // After the last frame rendered before the map enters an \"idle\" state.\n    map.on('idle', function () {\n      // If these two layers have been added to the style,\n      // add the toggle buttons.\n      if (map.getLayer('contours') && map.getLayer('museums')) {\n        // Enumerate ids of the layers.\n        var toggleableLayerIds = ['contours', 'museums'];\n        // Set up the corresponding toggle button for each layer.\n        for (var i = 0; i < toggleableLayerIds.length; i++) {\n          var id = toggleableLayerIds[i];\n          if (!document.getElementById(id)) {\n            // Create a link.\n            var link = document.createElement('a');\n            link.id = id;\n            link.href = '#';\n            link.textContent = id;\n            link.className = 'active';\n            // Show or hide layer when the toggle is clicked.\n            link.onclick = function (e) {\n              var clickedLayer = this.textContent;\n              e.preventDefault();\n              e.stopPropagation();\n                \n              var visibility = map.getLayoutProperty(\n                clickedLayer,\n                'visibility'\n              );\n                \n              // Toggle layer visibility by changing the layout object's visibility property.\n              if (visibility === 'visible') {\n                map.setLayoutProperty(\n                clickedLayer,\n                'visibility',\n                'none'\n                );\n                this.className = '';\n              } else {\n                this.className = 'active';\n                map.setLayoutProperty(\n                clickedLayer,\n                'visibility',\n                'visible'\n                );\n              }\n            };\n            var layers = document.getElementById('dynamicLayer-menu');\n            layers.appendChild(link);\n          }\n        }\n      }\n      });\n\n    \n  })\n\n  return(\n    <>\n      <Head>\n        <link\n          href='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css'\n          rel='stylesheet'/>\n      </Head>\n      <nav id=\"dynamicLayer-menu\"></nav>\n      <div style=\"height: 100vh\" id=\"dynamicLayer-map\"></div>\n\n    </>\n  )\n}\n\nexport default dynamicLayer\n"]},"metadata":{},"sourceType":"module"}